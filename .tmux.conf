#set-option -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"
#set-option update-environment "CRD"
# color
set -g default-terminal "screen-256color"

bind-key y run "tmux save-buffer - | xclip -i -selection clipboard"



# Solarized 256 Colors
# ====================
# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
#set-option -g status-bg colour0 #base02 #colour235 #base02
#set-option -g status-fg colour136 #yellow
#set-option -g status-attr default

#set-option -g default-shell /usr/bin/fish

set -g set-titles on
set -g set-titles-string "#T"

# set window split
bind-key v split-window -h
bind-key b split-window

# default window title colors
#set-window-option -g window-status-fg colour244 #base0
#set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
#set-window-option -g window-status-current-fg colour166 #orange
#set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
#set-option -g pane-border-fg colour235 #base02
#set-option -g pane-active-border-fg colour11 #base01 #240

# message text
#set-option -g message-bg colour235 #base02
#set-option -g message-fg colour166 #orange

# pane number display
#set-option -g display-panes-active-colour colour33 #blue
#set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour green #green





# Status Bar
set -g status-interval 5
set -g status-justify centre # left align window list
#set -g status-left-length 45
#set -g status-right-length 65
#set -g status-left '#[fg=green]#H â€¢ #(cat $HOME/.public_ip) '# (#($HOME/bin/ip_last))#[default]'

#set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load 1) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=colour245]%m-%d-%Y'

#set -g status-right '#[fg=green,bg=default,bright]#(rainbarf) #[default]#[fg=green,bg=default] %m-%d-%Y#[fg=colour245]'





# C-b is not acceptable -- Vim uses it
set-option -g prefix C-space
bind-key C-space last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use <prefix> a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename on

# rm mouse mode fail
# this isn't a fail
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on
set -g mouse-utf8 off

# status bar
set-option -g status-utf8 on

# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.
if-shell "[[ `tmux -V` == *2.0* ]]" 'unbind c; bind c new-window -c "#{pane_current_path}"'
#if-shell "[[ `tmux -V` == *2.0* ]]" 'unbind s; bind s split-window -v -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *2.0* ]]" 'unbind b; bind b split-window -v -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *2.0* ]]" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *2.0* ]]" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'


# Smart pane switching with awareness of vim splits
#bind -n j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -L"
#bind -n k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -D"
#bind -n l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -U"
#bind -n \; run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-\;) || tmux select-pane -R"
#bind -n \ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

run-shell "powerline-daemon -q"
source "/usr/lib/python3.4/site-packages/powerline/bindings/tmux/powerline.conf"
 
# vim: ft=tmux
